#!/bin/bash

wait_for_init() {
  systemctl status --no-pager waggle-init
  while [ $? -eq 0 ]; do
    sleep 2
    systemctl status --no-pager waggle-init
  done
}

run_tests() {
  /usr/lib/waggle/guestnode/scripts/test_node.sh \
    > /home/waggle/test_node_GN_${CURRENT_DISK_DEVICE_TYPE}.log
}

generate_report() {
  local report_file="/home/waggle/test-report.txt"
  echo "Guest Node SD Test Results" > $report_file
  echo "--------------------------" >> $report_file
  cat /home/waggle/test_node_GN_SD.log >> $report_file

  echo >> $report_file
  echo "Guest Node eMMC Test Results" >> $report_file
  echo "----------------------------" >> $report_file
  cat /media/test/home/waggle/test_node_GN_MMC.log >> $report_file
}

# Determine root and alternate boot medium root device paths
. /usr/lib/waggle/core/scripts/detect_disk_devices.sh

# Wait for waggle-init to finish
wait_for_init

df | fgrep '/media/test'
rc=$?
echo "Return Code: $rc"
if [ $rc -ne 0 ]; then
  mount "${OTHER_DISK_DEVICE}p2" /media/test
  sleep 2
fi

init_file=/root/init_finished
start_file=/home/waggle/start_test
continue_file=/home/waggle/continue_test
finish_file=/home/waggle/finish_test
if [ ! -e ${recovery_file} ] ; then
  echo "Proper Waggle initialization has not finished. Aborting..."
  echo "Proper Waggle initialization has not finished. Aborting..." \
    > /home/waggle/test_node_GN_${CURRENT_DISK_DEVICE_TYPE}.log
  if [ "${CURRENT_DISK_DEVICE_TYPE}" == "SD" ]; then
    generate_report
  else
    cp /home/waggle/test_node_GN_${CURRENT_DISK_DEVICE_TYPE}.log \
       /home/waggle/test-report.txt
  fi
elif [ -e ${start_file} ] ; then
  run_tests
  touch /media/test${continue_file}
  rm ${start_file}
elif [ -e ${continue_file} ]; then
  run_tests
  touch /media/test${finish_file}
  if [ "${CURRENT_DISK_DEVICE_TYPE}" == "MMC" ]; then
    touch /media/test${finish_file}
  elif [ "${CURRENT_DISK_DEVICE_TYPE}" == "SD" ]; then
    generate_report
  fi
  rm ${continue_file}
elif [ -e ${finish_file} ]; then
  generate_report
  rm ${finish_file}
fi
sync
echo "Finished"
