#!/bin/bash

run_tests() {
  echo "Running tests..."
  /usr/lib/waggle/guestnode/scripts/test_node.sh \
    > /home/waggle/test_node_EP_${CURRENT_DISK_DEVICE_TYPE}.log
}

generate_report() {
  echo "In generate_report"
  local report_file="/home/waggle/test-report.txt"
  echo "Edge Processor eMMC Test Results" > $report_file
  echo "-------------------------------" >> $report_file
  cat /home/waggle/test_node_EP_${CURRENT_DISK_DEVICE_TYPE}.log >> $report_file || true
  rm -f /home/waggle/test_node_EP_${CURRENT_DISK_DEVICE_TYPE}.log

  mount | grep '/media/test' && true
  if [ $? -eq 1 ]; then
    echo "Mounting alternate boot medium..."
    mount "${OTHER_DISK_DEVICE}p2" /media/test
  fi

  echo >> $report_file
  echo "Edge Processor SD Test Results" >> $report_file
  echo "---------------------------------" >> $report_file
  cat /media/test/home/waggle/test_node_EP_${OTHER_DISK_DEVICE_TYPE}.log >> $report_file || true
  rm -f /media/test/home/waggle/test_node_EP_${OTHER_DISK_DEVICE_TYPE}.log

  umount /media/test
}

# Determine root and alternate boot medium root device paths
. /usr/lib/waggle/core/scripts/detect_disk_devices.sh

start_file=/home/waggle/start_test
finish_file=/home/waggle/finish_test

if [ -e ${start_file} ] ; then
  echo "Found start_test."
  run_tests

  echo "Creating ${finish_file}..."
  touch ${finish_file}

  echo "Removing ${start_file}..."
  rm ${start_file}

  echo "Syncing disk..."
  sync

  echo "Sleeping 5 minutes to approximately sync with the C1+..."
  sleep 5m

  echo "Sleeping up to 5 more minutes..."
  sleep_count=0
  ping -c 1 10.31.81.10 > /dev/null 2>&1
  nc_down=$?
  while [[ nc_down -eq 0 && sleep_count < 10 ]]; do
    sleep 30
    let "sleep_count+=1"
    ping -c 1 10.31.81.10 > /dev/null 2>&1
    nc_down=$?
  done

  echo "Halting to trigger reboot..."
  halt
elif [ -e ${finish_file} ]; then
  echo "Found ${finish_file}..."

  echo "Generating report.."
  generate_report

  echo "Removing ${finish_file}..."
  rm ${finish_file}
fi
